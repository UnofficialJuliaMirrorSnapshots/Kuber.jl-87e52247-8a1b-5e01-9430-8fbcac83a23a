# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiCoreV1ServiceAccount <: SwaggerModel
    apiVersion::Union{ Nothing, String } # apiVersion
    automountServiceAccountToken::Union{ Nothing, Bool } # automountServiceAccountToken
    imagePullSecrets::Union{ Nothing, Vector{IoK8sApiCoreV1LocalObjectReference} } # imagePullSecrets
    kind::Union{ Nothing, String } # kind
    metadata::Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta } # metadata
    secrets::Union{ Nothing, Vector{IoK8sApiCoreV1ObjectReference} } # secrets

    function IoK8sApiCoreV1ServiceAccount(;apiVersion=nothing, automountServiceAccountToken=nothing, imagePullSecrets=nothing, kind=nothing, metadata=nothing, secrets=nothing)
        o = new()
        set_field!(o, :apiVersion, apiVersion)
        set_field!(o, :automountServiceAccountToken, automountServiceAccountToken)
        set_field!(o, :imagePullSecrets, imagePullSecrets)
        set_field!(o, :kind, kind)
        set_field!(o, :metadata, metadata)
        set_field!(o, :secrets, secrets)
        o
    end
end # type IoK8sApiCoreV1ServiceAccount

const _name_map_IoK8sApiCoreV1ServiceAccount = Dict{String,Symbol}(["apiVersion"=>:apiVersion, "automountServiceAccountToken"=>:automountServiceAccountToken, "imagePullSecrets"=>:imagePullSecrets, "kind"=>:kind, "metadata"=>:metadata, "secrets"=>:secrets])
const _field_map_IoK8sApiCoreV1ServiceAccount = Dict{Symbol,String}([:apiVersion=>"apiVersion", :automountServiceAccountToken=>"automountServiceAccountToken", :imagePullSecrets=>"imagePullSecrets", :kind=>"kind", :metadata=>"metadata", :secrets=>"secrets"])
Swagger.name_map(::Type{ IoK8sApiCoreV1ServiceAccount }) = _name_map_IoK8sApiCoreV1ServiceAccount
Swagger.field_map(::Type{ IoK8sApiCoreV1ServiceAccount }) = _field_map_IoK8sApiCoreV1ServiceAccount

function check_required(o::IoK8sApiCoreV1ServiceAccount)
    true
end

function validate_field(o::IoK8sApiCoreV1ServiceAccount, name::Symbol, val)
end
