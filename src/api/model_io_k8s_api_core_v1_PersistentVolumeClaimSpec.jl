# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiCoreV1PersistentVolumeClaimSpec <: SwaggerModel
    accessModes::Union{ Nothing, Vector{String} } # accessModes
    dataSource::Union{ Nothing, IoK8sApiCoreV1TypedLocalObjectReference } # dataSource
    resources::Union{ Nothing, IoK8sApiCoreV1ResourceRequirements } # resources
    selector::Union{ Nothing, IoK8sApimachineryPkgApisMetaV1LabelSelector } # selector
    storageClassName::Union{ Nothing, String } # storageClassName
    volumeMode::Union{ Nothing, String } # volumeMode
    volumeName::Union{ Nothing, String } # volumeName

    function IoK8sApiCoreV1PersistentVolumeClaimSpec(;accessModes=nothing, dataSource=nothing, resources=nothing, selector=nothing, storageClassName=nothing, volumeMode=nothing, volumeName=nothing)
        o = new()
        set_field!(o, :accessModes, accessModes)
        set_field!(o, :dataSource, dataSource)
        set_field!(o, :resources, resources)
        set_field!(o, :selector, selector)
        set_field!(o, :storageClassName, storageClassName)
        set_field!(o, :volumeMode, volumeMode)
        set_field!(o, :volumeName, volumeName)
        o
    end
end # type IoK8sApiCoreV1PersistentVolumeClaimSpec

const _name_map_IoK8sApiCoreV1PersistentVolumeClaimSpec = Dict{String,Symbol}(["accessModes"=>:accessModes, "dataSource"=>:dataSource, "resources"=>:resources, "selector"=>:selector, "storageClassName"=>:storageClassName, "volumeMode"=>:volumeMode, "volumeName"=>:volumeName])
const _field_map_IoK8sApiCoreV1PersistentVolumeClaimSpec = Dict{Symbol,String}([:accessModes=>"accessModes", :dataSource=>"dataSource", :resources=>"resources", :selector=>"selector", :storageClassName=>"storageClassName", :volumeMode=>"volumeMode", :volumeName=>"volumeName"])
Swagger.name_map(::Type{ IoK8sApiCoreV1PersistentVolumeClaimSpec }) = _name_map_IoK8sApiCoreV1PersistentVolumeClaimSpec
Swagger.field_map(::Type{ IoK8sApiCoreV1PersistentVolumeClaimSpec }) = _field_map_IoK8sApiCoreV1PersistentVolumeClaimSpec

function check_required(o::IoK8sApiCoreV1PersistentVolumeClaimSpec)
    true
end

function validate_field(o::IoK8sApiCoreV1PersistentVolumeClaimSpec, name::Symbol, val)
end
