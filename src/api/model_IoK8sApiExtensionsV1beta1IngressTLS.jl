# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiExtensionsV1beta1IngressTLS <: SwaggerModel
    hosts::Any # spec type: Union{ Nothing, Vector{String} } # spec name: hosts
    secretName::Any # spec type: Union{ Nothing, String } # spec name: secretName

    function IoK8sApiExtensionsV1beta1IngressTLS(;hosts=nothing, secretName=nothing)
        o = new()
        validate_property(IoK8sApiExtensionsV1beta1IngressTLS, Symbol("hosts"), hosts)
        setfield!(o, Symbol("hosts"), hosts)
        validate_property(IoK8sApiExtensionsV1beta1IngressTLS, Symbol("secretName"), secretName)
        setfield!(o, Symbol("secretName"), secretName)
        o
    end
end # type IoK8sApiExtensionsV1beta1IngressTLS

const _property_map_IoK8sApiExtensionsV1beta1IngressTLS = Dict{Symbol,Symbol}(Symbol("hosts")=>Symbol("hosts"), Symbol("secretName")=>Symbol("secretName"))
const _property_types_IoK8sApiExtensionsV1beta1IngressTLS = Dict{Symbol,String}(Symbol("hosts")=>"Vector{String}", Symbol("secretName")=>"String")
Base.propertynames(::Type{ IoK8sApiExtensionsV1beta1IngressTLS }) = collect(keys(_property_map_IoK8sApiExtensionsV1beta1IngressTLS))
Swagger.property_type(::Type{ IoK8sApiExtensionsV1beta1IngressTLS }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiExtensionsV1beta1IngressTLS[name]))}
Swagger.field_name(::Type{ IoK8sApiExtensionsV1beta1IngressTLS }, property_name::Symbol) =  _property_map_IoK8sApiExtensionsV1beta1IngressTLS[property_name]

function check_required(o::IoK8sApiExtensionsV1beta1IngressTLS)
    true
end

function validate_property(::Type{ IoK8sApiExtensionsV1beta1IngressTLS }, name::Symbol, val)
end
