# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiEventsV1beta1Event <: SwaggerModel
    action::Any # spec type: Union{ Nothing, String } # spec name: action
    apiVersion::Any # spec type: Union{ Nothing, String } # spec name: apiVersion
    deprecatedCount::Any # spec type: Union{ Nothing, Int32 } # spec name: deprecatedCount
    deprecatedFirstTimestamp::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1Time } # spec name: deprecatedFirstTimestamp
    deprecatedLastTimestamp::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1Time } # spec name: deprecatedLastTimestamp
    deprecatedSource::Any # spec type: Union{ Nothing, IoK8sApiCoreV1EventSource } # spec name: deprecatedSource
    eventTime::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1MicroTime } # spec name: eventTime
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    metadata::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta } # spec name: metadata
    note::Any # spec type: Union{ Nothing, String } # spec name: note
    reason::Any # spec type: Union{ Nothing, String } # spec name: reason
    regarding::Any # spec type: Union{ Nothing, IoK8sApiCoreV1ObjectReference } # spec name: regarding
    related::Any # spec type: Union{ Nothing, IoK8sApiCoreV1ObjectReference } # spec name: related
    reportingController::Any # spec type: Union{ Nothing, String } # spec name: reportingController
    reportingInstance::Any # spec type: Union{ Nothing, String } # spec name: reportingInstance
    series::Any # spec type: Union{ Nothing, IoK8sApiEventsV1beta1EventSeries } # spec name: series
    type::Any # spec type: Union{ Nothing, String } # spec name: type

    function IoK8sApiEventsV1beta1Event(;action=nothing, apiVersion=nothing, deprecatedCount=nothing, deprecatedFirstTimestamp=nothing, deprecatedLastTimestamp=nothing, deprecatedSource=nothing, eventTime=nothing, kind=nothing, metadata=nothing, note=nothing, reason=nothing, regarding=nothing, related=nothing, reportingController=nothing, reportingInstance=nothing, series=nothing, type=nothing)
        o = new()
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("action"), action)
        setfield!(o, Symbol("action"), action)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("apiVersion"), apiVersion)
        setfield!(o, Symbol("apiVersion"), apiVersion)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("deprecatedCount"), deprecatedCount)
        setfield!(o, Symbol("deprecatedCount"), deprecatedCount)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("deprecatedFirstTimestamp"), deprecatedFirstTimestamp)
        setfield!(o, Symbol("deprecatedFirstTimestamp"), deprecatedFirstTimestamp)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("deprecatedLastTimestamp"), deprecatedLastTimestamp)
        setfield!(o, Symbol("deprecatedLastTimestamp"), deprecatedLastTimestamp)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("deprecatedSource"), deprecatedSource)
        setfield!(o, Symbol("deprecatedSource"), deprecatedSource)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("eventTime"), eventTime)
        setfield!(o, Symbol("eventTime"), eventTime)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("metadata"), metadata)
        setfield!(o, Symbol("metadata"), metadata)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("note"), note)
        setfield!(o, Symbol("note"), note)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("reason"), reason)
        setfield!(o, Symbol("reason"), reason)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("regarding"), regarding)
        setfield!(o, Symbol("regarding"), regarding)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("related"), related)
        setfield!(o, Symbol("related"), related)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("reportingController"), reportingController)
        setfield!(o, Symbol("reportingController"), reportingController)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("reportingInstance"), reportingInstance)
        setfield!(o, Symbol("reportingInstance"), reportingInstance)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("series"), series)
        setfield!(o, Symbol("series"), series)
        validate_property(IoK8sApiEventsV1beta1Event, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        o
    end
end # type IoK8sApiEventsV1beta1Event

const _property_map_IoK8sApiEventsV1beta1Event = Dict{Symbol,Symbol}(Symbol("action")=>Symbol("action"), Symbol("apiVersion")=>Symbol("apiVersion"), Symbol("deprecatedCount")=>Symbol("deprecatedCount"), Symbol("deprecatedFirstTimestamp")=>Symbol("deprecatedFirstTimestamp"), Symbol("deprecatedLastTimestamp")=>Symbol("deprecatedLastTimestamp"), Symbol("deprecatedSource")=>Symbol("deprecatedSource"), Symbol("eventTime")=>Symbol("eventTime"), Symbol("kind")=>Symbol("kind"), Symbol("metadata")=>Symbol("metadata"), Symbol("note")=>Symbol("note"), Symbol("reason")=>Symbol("reason"), Symbol("regarding")=>Symbol("regarding"), Symbol("related")=>Symbol("related"), Symbol("reportingController")=>Symbol("reportingController"), Symbol("reportingInstance")=>Symbol("reportingInstance"), Symbol("series")=>Symbol("series"), Symbol("type")=>Symbol("type"))
const _property_types_IoK8sApiEventsV1beta1Event = Dict{Symbol,String}(Symbol("action")=>"String", Symbol("apiVersion")=>"String", Symbol("deprecatedCount")=>"Int32", Symbol("deprecatedFirstTimestamp")=>"IoK8sApimachineryPkgApisMetaV1Time", Symbol("deprecatedLastTimestamp")=>"IoK8sApimachineryPkgApisMetaV1Time", Symbol("deprecatedSource")=>"IoK8sApiCoreV1EventSource", Symbol("eventTime")=>"IoK8sApimachineryPkgApisMetaV1MicroTime", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("note")=>"String", Symbol("reason")=>"String", Symbol("regarding")=>"IoK8sApiCoreV1ObjectReference", Symbol("related")=>"IoK8sApiCoreV1ObjectReference", Symbol("reportingController")=>"String", Symbol("reportingInstance")=>"String", Symbol("series")=>"IoK8sApiEventsV1beta1EventSeries", Symbol("type")=>"String")
Base.propertynames(::Type{ IoK8sApiEventsV1beta1Event }) = collect(keys(_property_map_IoK8sApiEventsV1beta1Event))
Swagger.property_type(::Type{ IoK8sApiEventsV1beta1Event }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiEventsV1beta1Event[name]))}
Swagger.field_name(::Type{ IoK8sApiEventsV1beta1Event }, property_name::Symbol) =  _property_map_IoK8sApiEventsV1beta1Event[property_name]

function check_required(o::IoK8sApiEventsV1beta1Event)
    (getproperty(o, Symbol("eventTime")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiEventsV1beta1Event }, name::Symbol, val)
end
