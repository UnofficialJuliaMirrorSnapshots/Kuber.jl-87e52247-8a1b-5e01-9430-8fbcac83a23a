# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApimachineryPkgApisMetaV1Initializers <: SwaggerModel
    pending::Any # spec type: Union{ Nothing, Vector{IoK8sApimachineryPkgApisMetaV1Initializer} } # spec name: pending
    result::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1Status } # spec name: result

    function IoK8sApimachineryPkgApisMetaV1Initializers(;pending=nothing, result=nothing)
        o = new()
        validate_property(IoK8sApimachineryPkgApisMetaV1Initializers, Symbol("pending"), pending)
        setfield!(o, Symbol("pending"), pending)
        validate_property(IoK8sApimachineryPkgApisMetaV1Initializers, Symbol("result"), result)
        setfield!(o, Symbol("result"), result)
        o
    end
end # type IoK8sApimachineryPkgApisMetaV1Initializers

const _property_map_IoK8sApimachineryPkgApisMetaV1Initializers = Dict{Symbol,Symbol}(Symbol("pending")=>Symbol("pending"), Symbol("result")=>Symbol("result"))
const _property_types_IoK8sApimachineryPkgApisMetaV1Initializers = Dict{Symbol,String}(Symbol("pending")=>"Vector{IoK8sApimachineryPkgApisMetaV1Initializer}", Symbol("result")=>"IoK8sApimachineryPkgApisMetaV1Status")
Base.propertynames(::Type{ IoK8sApimachineryPkgApisMetaV1Initializers }) = collect(keys(_property_map_IoK8sApimachineryPkgApisMetaV1Initializers))
Swagger.property_type(::Type{ IoK8sApimachineryPkgApisMetaV1Initializers }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApimachineryPkgApisMetaV1Initializers[name]))}
Swagger.field_name(::Type{ IoK8sApimachineryPkgApisMetaV1Initializers }, property_name::Symbol) =  _property_map_IoK8sApimachineryPkgApisMetaV1Initializers[property_name]

function check_required(o::IoK8sApimachineryPkgApisMetaV1Initializers)
    (getproperty(o, Symbol("pending")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApimachineryPkgApisMetaV1Initializers }, name::Symbol, val)
end
