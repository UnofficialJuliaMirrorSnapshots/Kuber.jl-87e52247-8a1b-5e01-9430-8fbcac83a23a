# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiAuthenticationV1beta1TokenReviewSpec <: SwaggerModel
    audiences::Any # spec type: Union{ Nothing, Vector{String} } # spec name: audiences
    token::Any # spec type: Union{ Nothing, String } # spec name: token

    function IoK8sApiAuthenticationV1beta1TokenReviewSpec(;audiences=nothing, token=nothing)
        o = new()
        validate_property(IoK8sApiAuthenticationV1beta1TokenReviewSpec, Symbol("audiences"), audiences)
        setfield!(o, Symbol("audiences"), audiences)
        validate_property(IoK8sApiAuthenticationV1beta1TokenReviewSpec, Symbol("token"), token)
        setfield!(o, Symbol("token"), token)
        o
    end
end # type IoK8sApiAuthenticationV1beta1TokenReviewSpec

const _property_map_IoK8sApiAuthenticationV1beta1TokenReviewSpec = Dict{Symbol,Symbol}(Symbol("audiences")=>Symbol("audiences"), Symbol("token")=>Symbol("token"))
const _property_types_IoK8sApiAuthenticationV1beta1TokenReviewSpec = Dict{Symbol,String}(Symbol("audiences")=>"Vector{String}", Symbol("token")=>"String")
Base.propertynames(::Type{ IoK8sApiAuthenticationV1beta1TokenReviewSpec }) = collect(keys(_property_map_IoK8sApiAuthenticationV1beta1TokenReviewSpec))
Swagger.property_type(::Type{ IoK8sApiAuthenticationV1beta1TokenReviewSpec }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiAuthenticationV1beta1TokenReviewSpec[name]))}
Swagger.field_name(::Type{ IoK8sApiAuthenticationV1beta1TokenReviewSpec }, property_name::Symbol) =  _property_map_IoK8sApiAuthenticationV1beta1TokenReviewSpec[property_name]

function check_required(o::IoK8sApiAuthenticationV1beta1TokenReviewSpec)
    true
end

function validate_property(::Type{ IoK8sApiAuthenticationV1beta1TokenReviewSpec }, name::Symbol, val)
end
