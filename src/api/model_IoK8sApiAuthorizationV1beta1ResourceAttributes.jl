# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiAuthorizationV1beta1ResourceAttributes <: SwaggerModel
    group::Any # spec type: Union{ Nothing, String } # spec name: group
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    namespace::Any # spec type: Union{ Nothing, String } # spec name: namespace
    resource::Any # spec type: Union{ Nothing, String } # spec name: resource
    subresource::Any # spec type: Union{ Nothing, String } # spec name: subresource
    verb::Any # spec type: Union{ Nothing, String } # spec name: verb
    version::Any # spec type: Union{ Nothing, String } # spec name: version

    function IoK8sApiAuthorizationV1beta1ResourceAttributes(;group=nothing, name=nothing, namespace=nothing, resource=nothing, subresource=nothing, verb=nothing, version=nothing)
        o = new()
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("group"), group)
        setfield!(o, Symbol("group"), group)
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("namespace"), namespace)
        setfield!(o, Symbol("namespace"), namespace)
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("resource"), resource)
        setfield!(o, Symbol("resource"), resource)
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("subresource"), subresource)
        setfield!(o, Symbol("subresource"), subresource)
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("verb"), verb)
        setfield!(o, Symbol("verb"), verb)
        validate_property(IoK8sApiAuthorizationV1beta1ResourceAttributes, Symbol("version"), version)
        setfield!(o, Symbol("version"), version)
        o
    end
end # type IoK8sApiAuthorizationV1beta1ResourceAttributes

const _property_map_IoK8sApiAuthorizationV1beta1ResourceAttributes = Dict{Symbol,Symbol}(Symbol("group")=>Symbol("group"), Symbol("name")=>Symbol("name"), Symbol("namespace")=>Symbol("namespace"), Symbol("resource")=>Symbol("resource"), Symbol("subresource")=>Symbol("subresource"), Symbol("verb")=>Symbol("verb"), Symbol("version")=>Symbol("version"))
const _property_types_IoK8sApiAuthorizationV1beta1ResourceAttributes = Dict{Symbol,String}(Symbol("group")=>"String", Symbol("name")=>"String", Symbol("namespace")=>"String", Symbol("resource")=>"String", Symbol("subresource")=>"String", Symbol("verb")=>"String", Symbol("version")=>"String")
Base.propertynames(::Type{ IoK8sApiAuthorizationV1beta1ResourceAttributes }) = collect(keys(_property_map_IoK8sApiAuthorizationV1beta1ResourceAttributes))
Swagger.property_type(::Type{ IoK8sApiAuthorizationV1beta1ResourceAttributes }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiAuthorizationV1beta1ResourceAttributes[name]))}
Swagger.field_name(::Type{ IoK8sApiAuthorizationV1beta1ResourceAttributes }, property_name::Symbol) =  _property_map_IoK8sApiAuthorizationV1beta1ResourceAttributes[property_name]

function check_required(o::IoK8sApiAuthorizationV1beta1ResourceAttributes)
    true
end

function validate_property(::Type{ IoK8sApiAuthorizationV1beta1ResourceAttributes }, name::Symbol, val)
end
