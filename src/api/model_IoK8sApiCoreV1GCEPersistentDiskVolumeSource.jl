# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiCoreV1GCEPersistentDiskVolumeSource <: SwaggerModel
    fsType::Any # spec type: Union{ Nothing, String } # spec name: fsType
    partition::Any # spec type: Union{ Nothing, Int32 } # spec name: partition
    pdName::Any # spec type: Union{ Nothing, String } # spec name: pdName
    readOnly::Any # spec type: Union{ Nothing, Bool } # spec name: readOnly

    function IoK8sApiCoreV1GCEPersistentDiskVolumeSource(;fsType=nothing, partition=nothing, pdName=nothing, readOnly=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1GCEPersistentDiskVolumeSource, Symbol("fsType"), fsType)
        setfield!(o, Symbol("fsType"), fsType)
        validate_property(IoK8sApiCoreV1GCEPersistentDiskVolumeSource, Symbol("partition"), partition)
        setfield!(o, Symbol("partition"), partition)
        validate_property(IoK8sApiCoreV1GCEPersistentDiskVolumeSource, Symbol("pdName"), pdName)
        setfield!(o, Symbol("pdName"), pdName)
        validate_property(IoK8sApiCoreV1GCEPersistentDiskVolumeSource, Symbol("readOnly"), readOnly)
        setfield!(o, Symbol("readOnly"), readOnly)
        o
    end
end # type IoK8sApiCoreV1GCEPersistentDiskVolumeSource

const _property_map_IoK8sApiCoreV1GCEPersistentDiskVolumeSource = Dict{Symbol,Symbol}(Symbol("fsType")=>Symbol("fsType"), Symbol("partition")=>Symbol("partition"), Symbol("pdName")=>Symbol("pdName"), Symbol("readOnly")=>Symbol("readOnly"))
const _property_types_IoK8sApiCoreV1GCEPersistentDiskVolumeSource = Dict{Symbol,String}(Symbol("fsType")=>"String", Symbol("partition")=>"Int32", Symbol("pdName")=>"String", Symbol("readOnly")=>"Bool")
Base.propertynames(::Type{ IoK8sApiCoreV1GCEPersistentDiskVolumeSource }) = collect(keys(_property_map_IoK8sApiCoreV1GCEPersistentDiskVolumeSource))
Swagger.property_type(::Type{ IoK8sApiCoreV1GCEPersistentDiskVolumeSource }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiCoreV1GCEPersistentDiskVolumeSource[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1GCEPersistentDiskVolumeSource }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1GCEPersistentDiskVolumeSource[property_name]

function check_required(o::IoK8sApiCoreV1GCEPersistentDiskVolumeSource)
    (getproperty(o, Symbol("pdName")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1GCEPersistentDiskVolumeSource }, name::Symbol, val)
end
