# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiCoreV1ScopedResourceSelectorRequirement <: SwaggerModel
    operator::Union{ Nothing, String } # operator
    scopeName::Union{ Nothing, String } # scopeName
    values::Union{ Nothing, Vector{String} } # values

    function IoK8sApiCoreV1ScopedResourceSelectorRequirement(;operator=nothing, scopeName=nothing, values=nothing)
        o = new()
        set_field!(o, :operator, operator)
        set_field!(o, :scopeName, scopeName)
        set_field!(o, :values, values)
        o
    end
end # type IoK8sApiCoreV1ScopedResourceSelectorRequirement

const _name_map_IoK8sApiCoreV1ScopedResourceSelectorRequirement = Dict{String,Symbol}(["operator"=>:operator, "scopeName"=>:scopeName, "values"=>:values])
const _field_map_IoK8sApiCoreV1ScopedResourceSelectorRequirement = Dict{Symbol,String}([:operator=>"operator", :scopeName=>"scopeName", :values=>"values"])
Swagger.name_map(::Type{ IoK8sApiCoreV1ScopedResourceSelectorRequirement }) = _name_map_IoK8sApiCoreV1ScopedResourceSelectorRequirement
Swagger.field_map(::Type{ IoK8sApiCoreV1ScopedResourceSelectorRequirement }) = _field_map_IoK8sApiCoreV1ScopedResourceSelectorRequirement

function check_required(o::IoK8sApiCoreV1ScopedResourceSelectorRequirement)
    (o.operator === nothing) && (return false)
    (o.scopeName === nothing) && (return false)
    true
end

function validate_field(o::IoK8sApiCoreV1ScopedResourceSelectorRequirement, name::Symbol, val)
end
