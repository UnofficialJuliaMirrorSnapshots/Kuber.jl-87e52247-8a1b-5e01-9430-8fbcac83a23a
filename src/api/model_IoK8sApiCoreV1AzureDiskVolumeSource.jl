# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiCoreV1AzureDiskVolumeSource <: SwaggerModel
    cachingMode::Any # spec type: Union{ Nothing, String } # spec name: cachingMode
    diskName::Any # spec type: Union{ Nothing, String } # spec name: diskName
    diskURI::Any # spec type: Union{ Nothing, String } # spec name: diskURI
    fsType::Any # spec type: Union{ Nothing, String } # spec name: fsType
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    readOnly::Any # spec type: Union{ Nothing, Bool } # spec name: readOnly

    function IoK8sApiCoreV1AzureDiskVolumeSource(;cachingMode=nothing, diskName=nothing, diskURI=nothing, fsType=nothing, kind=nothing, readOnly=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("cachingMode"), cachingMode)
        setfield!(o, Symbol("cachingMode"), cachingMode)
        validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("diskName"), diskName)
        setfield!(o, Symbol("diskName"), diskName)
        validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("diskURI"), diskURI)
        setfield!(o, Symbol("diskURI"), diskURI)
        validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("fsType"), fsType)
        setfield!(o, Symbol("fsType"), fsType)
        validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApiCoreV1AzureDiskVolumeSource, Symbol("readOnly"), readOnly)
        setfield!(o, Symbol("readOnly"), readOnly)
        o
    end
end # type IoK8sApiCoreV1AzureDiskVolumeSource

const _property_map_IoK8sApiCoreV1AzureDiskVolumeSource = Dict{Symbol,Symbol}(Symbol("cachingMode")=>Symbol("cachingMode"), Symbol("diskName")=>Symbol("diskName"), Symbol("diskURI")=>Symbol("diskURI"), Symbol("fsType")=>Symbol("fsType"), Symbol("kind")=>Symbol("kind"), Symbol("readOnly")=>Symbol("readOnly"))
const _property_types_IoK8sApiCoreV1AzureDiskVolumeSource = Dict{Symbol,String}(Symbol("cachingMode")=>"String", Symbol("diskName")=>"String", Symbol("diskURI")=>"String", Symbol("fsType")=>"String", Symbol("kind")=>"String", Symbol("readOnly")=>"Bool")
Base.propertynames(::Type{ IoK8sApiCoreV1AzureDiskVolumeSource }) = collect(keys(_property_map_IoK8sApiCoreV1AzureDiskVolumeSource))
Swagger.property_type(::Type{ IoK8sApiCoreV1AzureDiskVolumeSource }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiCoreV1AzureDiskVolumeSource[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1AzureDiskVolumeSource }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1AzureDiskVolumeSource[property_name]

function check_required(o::IoK8sApiCoreV1AzureDiskVolumeSource)
    (getproperty(o, Symbol("diskName")) === nothing) && (return false)
    (getproperty(o, Symbol("diskURI")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1AzureDiskVolumeSource }, name::Symbol, val)
end
