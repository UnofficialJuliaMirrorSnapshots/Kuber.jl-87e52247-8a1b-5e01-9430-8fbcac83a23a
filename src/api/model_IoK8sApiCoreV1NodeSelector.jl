# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiCoreV1NodeSelector <: SwaggerModel
    nodeSelectorTerms::Any # spec type: Union{ Nothing, Vector{IoK8sApiCoreV1NodeSelectorTerm} } # spec name: nodeSelectorTerms

    function IoK8sApiCoreV1NodeSelector(;nodeSelectorTerms=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1NodeSelector, Symbol("nodeSelectorTerms"), nodeSelectorTerms)
        setfield!(o, Symbol("nodeSelectorTerms"), nodeSelectorTerms)
        o
    end
end # type IoK8sApiCoreV1NodeSelector

const _property_map_IoK8sApiCoreV1NodeSelector = Dict{Symbol,Symbol}(Symbol("nodeSelectorTerms")=>Symbol("nodeSelectorTerms"))
const _property_types_IoK8sApiCoreV1NodeSelector = Dict{Symbol,String}(Symbol("nodeSelectorTerms")=>"Vector{IoK8sApiCoreV1NodeSelectorTerm}")
Base.propertynames(::Type{ IoK8sApiCoreV1NodeSelector }) = collect(keys(_property_map_IoK8sApiCoreV1NodeSelector))
Swagger.property_type(::Type{ IoK8sApiCoreV1NodeSelector }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiCoreV1NodeSelector[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1NodeSelector }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1NodeSelector[property_name]

function check_required(o::IoK8sApiCoreV1NodeSelector)
    (getproperty(o, Symbol("nodeSelectorTerms")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1NodeSelector }, name::Symbol, val)
end
