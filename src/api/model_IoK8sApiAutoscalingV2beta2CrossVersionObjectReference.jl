# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiAutoscalingV2beta2CrossVersionObjectReference <: SwaggerModel
    apiVersion::Any # spec type: Union{ Nothing, String } # spec name: apiVersion
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    name::Any # spec type: Union{ Nothing, String } # spec name: name

    function IoK8sApiAutoscalingV2beta2CrossVersionObjectReference(;apiVersion=nothing, kind=nothing, name=nothing)
        o = new()
        validate_property(IoK8sApiAutoscalingV2beta2CrossVersionObjectReference, Symbol("apiVersion"), apiVersion)
        setfield!(o, Symbol("apiVersion"), apiVersion)
        validate_property(IoK8sApiAutoscalingV2beta2CrossVersionObjectReference, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApiAutoscalingV2beta2CrossVersionObjectReference, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        o
    end
end # type IoK8sApiAutoscalingV2beta2CrossVersionObjectReference

const _property_map_IoK8sApiAutoscalingV2beta2CrossVersionObjectReference = Dict{Symbol,Symbol}(Symbol("apiVersion")=>Symbol("apiVersion"), Symbol("kind")=>Symbol("kind"), Symbol("name")=>Symbol("name"))
const _property_types_IoK8sApiAutoscalingV2beta2CrossVersionObjectReference = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("kind")=>"String", Symbol("name")=>"String")
Base.propertynames(::Type{ IoK8sApiAutoscalingV2beta2CrossVersionObjectReference }) = collect(keys(_property_map_IoK8sApiAutoscalingV2beta2CrossVersionObjectReference))
Swagger.property_type(::Type{ IoK8sApiAutoscalingV2beta2CrossVersionObjectReference }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiAutoscalingV2beta2CrossVersionObjectReference[name]))}
Swagger.field_name(::Type{ IoK8sApiAutoscalingV2beta2CrossVersionObjectReference }, property_name::Symbol) =  _property_map_IoK8sApiAutoscalingV2beta2CrossVersionObjectReference[property_name]

function check_required(o::IoK8sApiAutoscalingV2beta2CrossVersionObjectReference)
    (getproperty(o, Symbol("kind")) === nothing) && (return false)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiAutoscalingV2beta2CrossVersionObjectReference }, name::Symbol, val)
end
