# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule <: SwaggerModel
    ports::Any # spec type: Union{ Nothing, Vector{IoK8sApiExtensionsV1beta1NetworkPolicyPort} } # spec name: ports
    to::Any # spec type: Union{ Nothing, Vector{IoK8sApiExtensionsV1beta1NetworkPolicyPeer} } # spec name: to

    function IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule(;ports=nothing, to=nothing)
        o = new()
        validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule, Symbol("ports"), ports)
        setfield!(o, Symbol("ports"), ports)
        validate_property(IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule, Symbol("to"), to)
        setfield!(o, Symbol("to"), to)
        o
    end
end # type IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule

const _property_map_IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule = Dict{Symbol,Symbol}(Symbol("ports")=>Symbol("ports"), Symbol("to")=>Symbol("to"))
const _property_types_IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule = Dict{Symbol,String}(Symbol("ports")=>"Vector{IoK8sApiExtensionsV1beta1NetworkPolicyPort}", Symbol("to")=>"Vector{IoK8sApiExtensionsV1beta1NetworkPolicyPeer}")
Base.propertynames(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule }) = collect(keys(_property_map_IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule))
Swagger.property_type(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule[name]))}
Swagger.field_name(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule }, property_name::Symbol) =  _property_map_IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule[property_name]

function check_required(o::IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule)
    true
end

function validate_property(::Type{ IoK8sApiExtensionsV1beta1NetworkPolicyEgressRule }, name::Symbol, val)
end
