# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiCoreV1GitRepoVolumeSource <: SwaggerModel
    directory::Union{ Nothing, String } # directory
    repository::Union{ Nothing, String } # repository
    revision::Union{ Nothing, String } # revision

    function IoK8sApiCoreV1GitRepoVolumeSource(;directory=nothing, repository=nothing, revision=nothing)
        o = new()
        set_field!(o, :directory, directory)
        set_field!(o, :repository, repository)
        set_field!(o, :revision, revision)
        o
    end
end # type IoK8sApiCoreV1GitRepoVolumeSource

const _name_map_IoK8sApiCoreV1GitRepoVolumeSource = Dict{String,Symbol}(["directory"=>:directory, "repository"=>:repository, "revision"=>:revision])
const _field_map_IoK8sApiCoreV1GitRepoVolumeSource = Dict{Symbol,String}([:directory=>"directory", :repository=>"repository", :revision=>"revision"])
Swagger.name_map(::Type{ IoK8sApiCoreV1GitRepoVolumeSource }) = _name_map_IoK8sApiCoreV1GitRepoVolumeSource
Swagger.field_map(::Type{ IoK8sApiCoreV1GitRepoVolumeSource }) = _field_map_IoK8sApiCoreV1GitRepoVolumeSource

function check_required(o::IoK8sApiCoreV1GitRepoVolumeSource)
    (o.repository === nothing) && (return false)
    true
end

function validate_field(o::IoK8sApiCoreV1GitRepoVolumeSource, name::Symbol, val)
end
