# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiPolicyV1beta1RunAsUserStrategyOptions <: SwaggerModel
    ranges::Union{ Nothing, Vector{IoK8sApiPolicyV1beta1IDRange} } # ranges
    rule::Union{ Nothing, String } # rule

    function IoK8sApiPolicyV1beta1RunAsUserStrategyOptions(;ranges=nothing, rule=nothing)
        o = new()
        set_field!(o, :ranges, ranges)
        set_field!(o, :rule, rule)
        o
    end
end # type IoK8sApiPolicyV1beta1RunAsUserStrategyOptions

const _name_map_IoK8sApiPolicyV1beta1RunAsUserStrategyOptions = Dict{String,Symbol}(["ranges"=>:ranges, "rule"=>:rule])
const _field_map_IoK8sApiPolicyV1beta1RunAsUserStrategyOptions = Dict{Symbol,String}([:ranges=>"ranges", :rule=>"rule"])
Swagger.name_map(::Type{ IoK8sApiPolicyV1beta1RunAsUserStrategyOptions }) = _name_map_IoK8sApiPolicyV1beta1RunAsUserStrategyOptions
Swagger.field_map(::Type{ IoK8sApiPolicyV1beta1RunAsUserStrategyOptions }) = _field_map_IoK8sApiPolicyV1beta1RunAsUserStrategyOptions

function check_required(o::IoK8sApiPolicyV1beta1RunAsUserStrategyOptions)
    (o.rule === nothing) && (return false)
    true
end

function validate_field(o::IoK8sApiPolicyV1beta1RunAsUserStrategyOptions, name::Symbol, val)
end
