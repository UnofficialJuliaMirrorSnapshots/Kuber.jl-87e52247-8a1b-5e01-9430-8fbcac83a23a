# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IoK8sApiCoreV1ConfigMap <: SwaggerModel
    apiVersion::Any # spec type: Union{ Nothing, String } # spec name: apiVersion
    binaryData::Any # spec type: Union{ Nothing, Dict{String, Vector{UInt8}} } # spec name: binaryData
    data::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: data
    kind::Any # spec type: Union{ Nothing, String } # spec name: kind
    metadata::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta } # spec name: metadata

    function IoK8sApiCoreV1ConfigMap(;apiVersion=nothing, binaryData=nothing, data=nothing, kind=nothing, metadata=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1ConfigMap, Symbol("apiVersion"), apiVersion)
        setfield!(o, Symbol("apiVersion"), apiVersion)
        validate_property(IoK8sApiCoreV1ConfigMap, Symbol("binaryData"), binaryData)
        setfield!(o, Symbol("binaryData"), binaryData)
        validate_property(IoK8sApiCoreV1ConfigMap, Symbol("data"), data)
        setfield!(o, Symbol("data"), data)
        validate_property(IoK8sApiCoreV1ConfigMap, Symbol("kind"), kind)
        setfield!(o, Symbol("kind"), kind)
        validate_property(IoK8sApiCoreV1ConfigMap, Symbol("metadata"), metadata)
        setfield!(o, Symbol("metadata"), metadata)
        o
    end
end # type IoK8sApiCoreV1ConfigMap

const _property_map_IoK8sApiCoreV1ConfigMap = Dict{Symbol,Symbol}(Symbol("apiVersion")=>Symbol("apiVersion"), Symbol("binaryData")=>Symbol("binaryData"), Symbol("data")=>Symbol("data"), Symbol("kind")=>Symbol("kind"), Symbol("metadata")=>Symbol("metadata"))
const _property_types_IoK8sApiCoreV1ConfigMap = Dict{Symbol,String}(Symbol("apiVersion")=>"String", Symbol("binaryData")=>"Dict{String, Vector{UInt8}}", Symbol("data")=>"Dict{String, String}", Symbol("kind")=>"String", Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta")
Base.propertynames(::Type{ IoK8sApiCoreV1ConfigMap }) = collect(keys(_property_map_IoK8sApiCoreV1ConfigMap))
Swagger.property_type(::Type{ IoK8sApiCoreV1ConfigMap }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IoK8sApiCoreV1ConfigMap[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1ConfigMap }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1ConfigMap[property_name]

function check_required(o::IoK8sApiCoreV1ConfigMap)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1ConfigMap }, name::Symbol, val)
end
