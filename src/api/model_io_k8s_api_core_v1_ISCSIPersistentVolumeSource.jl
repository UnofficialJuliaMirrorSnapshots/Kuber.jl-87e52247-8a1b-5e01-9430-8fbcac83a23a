# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiCoreV1ISCSIPersistentVolumeSource <: SwaggerModel
    chapAuthDiscovery::Union{ Nothing, Bool } # chapAuthDiscovery
    chapAuthSession::Union{ Nothing, Bool } # chapAuthSession
    fsType::Union{ Nothing, String } # fsType
    initiatorName::Union{ Nothing, String } # initiatorName
    iqn::Union{ Nothing, String } # iqn
    iscsiInterface::Union{ Nothing, String } # iscsiInterface
    lun::Union{ Nothing, Int32 } # lun
    portals::Union{ Nothing, Vector{String} } # portals
    readOnly::Union{ Nothing, Bool } # readOnly
    secretRef::Union{ Nothing, IoK8sApiCoreV1SecretReference } # secretRef
    targetPortal::Union{ Nothing, String } # targetPortal

    function IoK8sApiCoreV1ISCSIPersistentVolumeSource(;chapAuthDiscovery=nothing, chapAuthSession=nothing, fsType=nothing, initiatorName=nothing, iqn=nothing, iscsiInterface=nothing, lun=nothing, portals=nothing, readOnly=nothing, secretRef=nothing, targetPortal=nothing)
        o = new()
        set_field!(o, :chapAuthDiscovery, chapAuthDiscovery)
        set_field!(o, :chapAuthSession, chapAuthSession)
        set_field!(o, :fsType, fsType)
        set_field!(o, :initiatorName, initiatorName)
        set_field!(o, :iqn, iqn)
        set_field!(o, :iscsiInterface, iscsiInterface)
        set_field!(o, :lun, lun)
        set_field!(o, :portals, portals)
        set_field!(o, :readOnly, readOnly)
        set_field!(o, :secretRef, secretRef)
        set_field!(o, :targetPortal, targetPortal)
        o
    end
end # type IoK8sApiCoreV1ISCSIPersistentVolumeSource

const _name_map_IoK8sApiCoreV1ISCSIPersistentVolumeSource = Dict{String,Symbol}(["chapAuthDiscovery"=>:chapAuthDiscovery, "chapAuthSession"=>:chapAuthSession, "fsType"=>:fsType, "initiatorName"=>:initiatorName, "iqn"=>:iqn, "iscsiInterface"=>:iscsiInterface, "lun"=>:lun, "portals"=>:portals, "readOnly"=>:readOnly, "secretRef"=>:secretRef, "targetPortal"=>:targetPortal])
const _field_map_IoK8sApiCoreV1ISCSIPersistentVolumeSource = Dict{Symbol,String}([:chapAuthDiscovery=>"chapAuthDiscovery", :chapAuthSession=>"chapAuthSession", :fsType=>"fsType", :initiatorName=>"initiatorName", :iqn=>"iqn", :iscsiInterface=>"iscsiInterface", :lun=>"lun", :portals=>"portals", :readOnly=>"readOnly", :secretRef=>"secretRef", :targetPortal=>"targetPortal"])
Swagger.name_map(::Type{ IoK8sApiCoreV1ISCSIPersistentVolumeSource }) = _name_map_IoK8sApiCoreV1ISCSIPersistentVolumeSource
Swagger.field_map(::Type{ IoK8sApiCoreV1ISCSIPersistentVolumeSource }) = _field_map_IoK8sApiCoreV1ISCSIPersistentVolumeSource

function check_required(o::IoK8sApiCoreV1ISCSIPersistentVolumeSource)
    (o.iqn === nothing) && (return false)
    (o.lun === nothing) && (return false)
    (o.targetPortal === nothing) && (return false)
    true
end

function validate_field(o::IoK8sApiCoreV1ISCSIPersistentVolumeSource, name::Symbol, val)
end
