# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct IoK8sApiCoordinationV1beta1LeaseSpec <: SwaggerModel
    acquireTime::Union{ Nothing, IoK8sApimachineryPkgApisMetaV1MicroTime } # acquireTime
    holderIdentity::Union{ Nothing, String } # holderIdentity
    leaseDurationSeconds::Union{ Nothing, Int32 } # leaseDurationSeconds
    leaseTransitions::Union{ Nothing, Int32 } # leaseTransitions
    renewTime::Union{ Nothing, IoK8sApimachineryPkgApisMetaV1MicroTime } # renewTime

    function IoK8sApiCoordinationV1beta1LeaseSpec(;acquireTime=nothing, holderIdentity=nothing, leaseDurationSeconds=nothing, leaseTransitions=nothing, renewTime=nothing)
        o = new()
        set_field!(o, :acquireTime, acquireTime)
        set_field!(o, :holderIdentity, holderIdentity)
        set_field!(o, :leaseDurationSeconds, leaseDurationSeconds)
        set_field!(o, :leaseTransitions, leaseTransitions)
        set_field!(o, :renewTime, renewTime)
        o
    end
end # type IoK8sApiCoordinationV1beta1LeaseSpec

const _name_map_IoK8sApiCoordinationV1beta1LeaseSpec = Dict{String,Symbol}(["acquireTime"=>:acquireTime, "holderIdentity"=>:holderIdentity, "leaseDurationSeconds"=>:leaseDurationSeconds, "leaseTransitions"=>:leaseTransitions, "renewTime"=>:renewTime])
const _field_map_IoK8sApiCoordinationV1beta1LeaseSpec = Dict{Symbol,String}([:acquireTime=>"acquireTime", :holderIdentity=>"holderIdentity", :leaseDurationSeconds=>"leaseDurationSeconds", :leaseTransitions=>"leaseTransitions", :renewTime=>"renewTime"])
Swagger.name_map(::Type{ IoK8sApiCoordinationV1beta1LeaseSpec }) = _name_map_IoK8sApiCoordinationV1beta1LeaseSpec
Swagger.field_map(::Type{ IoK8sApiCoordinationV1beta1LeaseSpec }) = _field_map_IoK8sApiCoordinationV1beta1LeaseSpec

function check_required(o::IoK8sApiCoordinationV1beta1LeaseSpec)
    true
end

function validate_field(o::IoK8sApiCoordinationV1beta1LeaseSpec, name::Symbol, val)
end
